using NUnit.Framework;
using Moq;
using ReFolder.Dir;
using ReFolder.Dir.Description;
using System;
using System.Collections.Generic;

namespace ReFolder.Tests.Dir
{
    class ChildDir_Tests
    {
        [Test]
        public void AutoGenerateDirFullName_Pass_WhenAcceptableParrentIsDelivered()
        {
            //arrange
            string mainAddress = "c:\\blueCat\\MyCats";
            string childDirName = "puszek";
            IEditableDirWithChildren main = Mock.Of<IEditableDirWithChildren>(x=> 
            x.Description.FullName==mainAddress);
            IEditableDirWithChildrenAndParrent childDir = new ChildDir(childDirName, main);
            //act
            var address = childDir.AutoGenerateDirFullName();
            //assert
            Assert.AreEqual($"{mainAddress}\\puszek", address);
        }
        [Test]
        public void AutoGenerateDirFullName_ThrowsArgumentNullException_WhenParrentFullNameIsNull()
        {
            //arrange
            string mainAddress = null;
            string childDirName = "puszek";
            IEditableDirWithChildren main = Mock.Of<IEditableDirWithChildren>(x=> 
            x.Description.FullName==mainAddress);
            IEditableDirWithChildrenAndParrent childDir = new ChildDir(childDirName, main);
            //act
            TestDelegate action = () => childDir.AutoGenerateDirFullName();
            //assert
            Assert.Throws<NullReferenceException>(action, "parrent fullName is null");
        }
    }
}
